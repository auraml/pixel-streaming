{
  "version": 3,
  "file": "pixel-streaming.cjs.production.min.js",
  "sources": [
    "../src/context/useGlobalContext/reducer.ts",
    "../src/context/useGlobalContext/initial.ts",
    "../src/configs/project.ts",
    "../src/configs/utils/npm.ts",
    "../src/configs/utils/license.ts",
    "../src/context/useGlobalContext/actions.ts",
    "../src/context/useGlobalContext/index.tsx",
    "../src/context/useStreamContext/reducer.ts",
    "../src/context/useStreamContext/initial.ts",
    "../src/configs/utils/watermark.ts",
    "../src/context/useStreamContext/index.tsx",
    "../src/context/useStreamContext/actions.ts",
    "../src/components/JsonView/index.tsx",
    "../src/hooks.stream/useStreamActions/index.ts",
    "../src/hooks.stream/useStreamActions/useSave.tsx",
    "../src/hooks.player/usePreloader.ts",
    "../src/hooks/useEventListener.ts",
    "../src/hooks.stream/useStreamEvents.ts",
    "../src/hooks.stream/useStreamResponses/useResponseSave.tsx",
    "../src/snippets/Player/Preloader.tsx",
    "../src/hooks/useMedia.ts",
    "../src/snippets/Toolbar/Appbar/index.tsx",
    "../src/components/Drawer/index.tsx",
    "../src/snippets/Drawers/DrawerInfo/Container.tsx",
    "../src/snippets/Drawers/DrawerInfo/index.tsx",
    "../src/snippets/Toolbar/UiButton.tsx",
    "../src/snippets/Toolbar/PackageUpdate.tsx",
    "../src/snippets/Toolbar/index.tsx",
    "../src/snippets/Container.tsx",
    "../src/snippets/Player/PlayerComponent.tsx",
    "../src/hooks/useWindowSize.ts",
    "../src/hooks.stream/useStreamResponses/index.ts",
    "../src/hooks.player/useWatermark.ts",
    "../src/snippets/Player/index.tsx",
    "../src/index.tsx",
    "../src/context/index.tsx"
  ],
  "sourcesContent": [
    "import { StateProps } from './initial'\n\nconst KEYS = {\n  UPDATE: 'UPDATE'\n}\n\nfunction Reducer(state: StateProps, action: any) {\n  const { type, payload: anValue } = action\n\n  if (type === KEYS.UPDATE) {\n    return { ...state, ...anValue }\n  }\n\n  return state\n}\n\nexport { Reducer, KEYS }\n",
    "import { LicenseData } from '../../configs/utils/license'\n\n// Types\nexport interface StateProps {\n  packageVersion: {\n    latest: null | string,\n    current: null | string,\n    needUpdate: boolean,\n  }\n  showPreloader: boolean\n  licenseData: LicenseData | null\n}\n\nexport const initialState: StateProps = {\n\n  packageVersion: {\n    latest: null,\n    current: null,\n    needUpdate: false,\n  },\n  showPreloader: true,\n  licenseData: null,\n}",
    "// package\nimport pkg from '../../package.json'\n\nconst isDev = process.env.NODE_ENV == 'development'\n\nlet apiHost = 'https://unrealos.com'\n// if (isDev) apiHost = 'http://0.0.0.0:8000'\n\n\ninterface Project {\n  isDev: boolean\n  apiHost: string\n  name: string\n  package: {\n    name: string\n    version: string\n    npmUrl: string\n  }\n  license: {\n    excludes: string[],\n    checkUrl: string\n  }\n  urls: {\n    main: string\n    docs: string\n    support: string\n    buy: string\n    signalingServer: string\n    onlinePlayer: string\n  }\n}\n\nconst project: Project = {\n  isDev,\n  apiHost,\n  name: 'MetaEditor',\n  package: {\n    name: pkg.name,\n    version: pkg.version,\n    npmUrl: `https://www.npmjs.com/package/${pkg.name}`,\n  },\n  license: {\n    excludes: ['localhost', '127.0.0.1', '0.0.0.0', 'player.metaeditor.io'],\n    checkUrl: `${apiHost}/api/unrealos/license/check/`,\n  },\n  urls: {\n    main: 'http://metaeditor.io/',\n    docs: 'https://metaeditor.io/docs',\n    support: 'https://unrealos.com/p/contacts/',\n    buy: 'https://unrealos.com/apps/metaeditor/',\n    signalingServer: 'https://github.com/markolofsen/metaeditor/releases/tag/signaling-server',\n    onlinePlayer: 'https://player.metaeditor.io',\n  },\n}\n\nexport default project",
    "import project from \"../project\";\n\n// libs\nimport semver from 'semver'\n\n\nexport default async function checkPackageVersion() {\n  const url = `https://registry.npmjs.org/${project.package.name}`\n\n  const v = await new Promise((resolve, reject) => {\n\n    fetch(url)\n      .then(res => res.json())\n      .then(res => {\n        try {\n          const latest = res['dist-tags'].latest\n          const current = project.package.version\n          const needUpdate = semver.gt(latest, current)\n          resolve({\n            latest,\n            current,\n            needUpdate,\n          })\n\n        } catch (err) {\n          console.error(`Can't parse npm data`)\n          resolve(null)\n        }\n      })\n      .catch((err) => {\n        console.error(`Can't check package version`)\n        resolve(false)\n      });\n\n  });\n\n  return v\n\n}",
    "import project from \"../project\";\n\nexport interface LicenseData {\n  is_exclusion: boolean\n  is_valid: boolean\n}\n\nexport default async function checkLicenseKey() {\n  const url = project.license.checkUrl\n\n  const v: LicenseData = await new Promise((resolve, reject) => {\n\n    const host = window.location.hostname\n\n    if (project.license.excludes.includes(host)) {\n\n      resolve({\n        is_exclusion: true,\n        is_valid: false,\n      })\n\n      return\n    }\n\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        host,\n      })\n    })\n      .then(res => res.json())\n      .then(res => {\n\n        // alert(JSON.stringify(res, null, 2))\n\n        resolve({\n          is_exclusion: false,\n          is_valid: res.is_valid,\n        })\n\n      })\n      .catch((err) => {\n\n        if (project.isDev) {\n          console.error(`Can't check license`)\n        }\n\n        resolve({\n          is_exclusion: false,\n          is_valid: true,\n        })\n\n      });\n\n  });\n\n  return v\n\n}",
    "import * as React from 'react'\n\n// reducers\nimport { Reducer, KEYS } from './reducer'\nimport { initialState, StateProps } from './initial'\n\n// configs\nimport checkPackageVersion from '../../configs/utils/npm'\nimport checkLicenseKey from '../../configs/utils/license'\n\n\nconst actions = () => {\n\n  // ** States\n  const [state, dispatch]: [StateProps, any] = React.useReducer(Reducer, initialState)\n\n  // ** Classes\n  const cls = new class {\n\n    get state() {\n      return state\n    }\n\n    dispatch(payload: unknown) {\n      dispatch({\n        type: KEYS.UPDATE,\n        payload,\n      })\n    }\n\n    async checkVersion() {\n      const packageVersion = await checkPackageVersion()\n      this.dispatch({ packageVersion })\n    }\n\n    async checkApiKey() {\n      const licenseData = await checkLicenseKey()\n      // alert(JSON.stringify(licenseData, null, 2))\n      this.dispatch({ licenseData })\n    }\n\n    get isLicenseValid() {\n      if (!state.licenseData) return false\n      return state.licenseData?.is_valid\n    }\n\n    get isLicenseActivated() {\n      if (!state.licenseData) return false\n      return state.licenseData?.is_valid || state.licenseData?.is_exclusion\n    }\n\n    hidePreloader() {\n      this.dispatch({ showPreloader: false })\n    }\n  }\n\n  return cls\n}\n\nexport interface ActionProps {\n  state: StateProps\n  checkVersion: () => void\n  checkApiKey: () => void\n  isLicenseValid: boolean\n  isLicenseActivated: boolean\n  hidePreloader: () => void\n}\n\nexport default actions\n",
    "import * as React from 'react'\n\n// classes\nimport actions from './actions'\nimport { ActionProps } from './actions'\n\nconst Context = React.createContext({} as ActionProps)\nexport const useGlobalContext = () => React.useContext(Context)\n\ninterface Props {\n  children: JSX.Element\n}\n\nconst Provider = (props: Props) => {\n  const payload: any = actions()\n\n  return <Context.Provider value={payload}>{props.children}</Context.Provider>\n}\n\nexport default Provider\n",
    "import { StateProps } from './initial'\n\nconst KEYS = {\n  UPDATE: 'UPDATE',\n  UPDATE_PS_CONFIG_KEY: 'UPDATE_PS_CONFIG_KEY',\n}\n\nfunction Reducer(state: StateProps, action: any) {\n  const { type, payload: anValue } = action\n\n  if (type === KEYS.UPDATE) {\n    return { ...state, ...anValue }\n\n  } else if (type === KEYS.UPDATE_PS_CONFIG_KEY) {\n    state.playerConfig.psConfig = {\n      ...state.playerConfig.psConfig,\n      ...anValue,\n    }\n\n    // alert(JSON.stringify(state, null, 2))\n    return {\n      ...state,\n    }\n  }\n\n  return state\n}\n\nexport { Reducer, KEYS }\n",
    "import { WebrtcStatus, StreamStatus } from './types'\n\n// types\nimport { PlayerConfigProps } from '../../snippets/Player/types'\n\nexport interface StateProps {\n  playerConfig: PlayerConfigProps | null\n  webrtcStatus: WebrtcStatus\n  webrtcMessage: string | boolean\n  streamStatus: StreamStatus\n  streamMessage: string | boolean\n  freezeFrame: boolean\n}\n\nexport const initialState: StateProps = {\n  playerConfig: null,\n  webrtcStatus: null,\n  webrtcMessage: false,\n  streamStatus: null,\n  streamMessage: false,\n  freezeFrame: false,\n}",
    "// configs\nimport project from \"../project\"\n\n// global\nlet watermarkTimer: any\n\nconst watermark = new class {\n\n  get node() {\n    const xpath = `//div[text()='${project.name}']`;\n    const matchingElement = document.evaluate(xpath, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null);\n    return (matchingElement.singleNodeValue as any)\n  }\n\n  start() {\n    clearInterval(watermarkTimer)\n    watermarkTimer = setInterval(() => {\n      watermark.injector()\n    }, 100)\n  }\n\n  stop() {\n    clearInterval(watermarkTimer)\n    this.node?.remove()\n  }\n\n  injector() {\n\n    if (!this.node) {\n      const dc = document.createElement(\"div\");\n\n      dc.addEventListener('mouseover', () => {\n        dc.style.opacity = '1';\n      })\n      dc.addEventListener('mouseleave', () => {\n        dc.style.opacity = '.7';\n      })\n\n      dc.innerText = project.name;\n      dc.onclick = (event) => {\n        event.preventDefault()\n        event.stopPropagation()\n        window.open(project.urls.buy)\n      }\n\n      dc.setAttribute(\n        'style',\n        `\n          text-shadow: 1px 1px 1px #000000;\n          text-transform: uppercase;\n          opacity: .7 !important;\n          display: none !important;\n          visibility: visible !important;\n          position: fixed !important;\n          bottom: 0.25rem !important;\n          right: 1rem !important;\n          z-index: 999999999999999999 !important;\n          color: #fff !important;\n          font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n          font-size: .55rem !important;\n          line-height: 100% !important;\n          letter-spacing: 1px;\n          cursor: pointer !important;\n          transition: background-color 300ms linear;\n          user-select: none !important;\n        `,\n\n        // transform: rotate(90deg);\n        //   background-color: rgba(0, 0, 0, .2);\n        //   border: solid 1px rgba(255,255,255, .1) !important;\n        //   padding: 4px 10px !important;\n        //   border-radius: 100px !important;\n      );\n\n      document.body.appendChild(dc);\n\n    }\n  }\n}\n\nexport default watermark",
    "import * as React from 'react'\n\n// classes\nimport actions from './actions'\nimport { ActionProps } from './actions'\n\nconst Context = React.createContext({} as ActionProps)\nexport const useStreamContext = () => React.useContext(Context)\n\ninterface Props {\n  children: JSX.Element\n}\n\nconst Provider = (props: Props) => {\n  const payload: any = actions()\n\n  return <Context.Provider value={payload}>{props.children}</Context.Provider>\n}\n\nexport default Provider\n",
    "import * as React from 'react'\n\n// reducers\nimport { Reducer, KEYS } from './reducer'\nimport { initialState, StateProps } from './initial'\n\n// types\nimport { WebrtcStatus, StreamStatus, CommandItem, ResponsItem } from './types'\nimport { PlayerConfigProps } from '../../snippets/Player/types'\nimport type { IApplication } from '../../globalTypes'\n\n\nconst actions = () => {\n\n  // states\n  const [state, dispatch]: [StateProps, any] = React.useReducer(Reducer, initialState)\n  const [commandsList, setCommandsList] = React.useState<CommandItem[]>([])\n  const [responsesList, setResponsesList] = React.useState<ResponsItem[]>([])\n\n  // refs\n  const refStreamApp = React.useRef(null)\n\n  // classes\n  const cls = new class {\n\n    get state() {\n      return state\n    }\n\n    get commandsList() {\n      return commandsList\n    }\n\n    get responsesList() {\n      return responsesList\n    }\n\n    dispatch(payload: unknown) {\n      dispatch({\n        type: KEYS.UPDATE,\n        payload,\n      })\n    }\n\n    dispatchPsConfig(payload: unknown) {\n      dispatch({\n        type: KEYS.UPDATE_PS_CONFIG_KEY,\n        payload,\n      })\n    }\n\n    get streamApp() {\n      return refStreamApp.current\n    }\n\n    setRefStream(app: IApplication) {\n      refStreamApp.current = app\n    }\n\n    get isStreamActive() {\n      return state.streamStatus === 'play'\n    }\n\n    get isWebrtcConnected() {\n      return state.webrtcStatus === 'connected'\n    }\n\n    get isWebrtcError() {\n      return ['failed', 'disconnected', 'disconnectedRestart'].includes(state.webrtcStatus)\n    }\n\n    get isStreamError() {\n      return ['error', 'rejected'].includes(state.streamStatus)\n    }\n\n    setWebrtcStatus(status: WebrtcStatus, message: string | boolean = false) {\n      this.dispatch({ webrtcStatus: status, webrtcMessage: message })\n    }\n\n    setStreamStatus(status: WebrtcStatus, message: string | boolean = false) {\n      this.dispatch({ streamStatus: status, streamMessage: message })\n    }\n\n    setFreezeFrame(freezeFrame: boolean) {\n      this.dispatch({ freezeFrame })\n    }\n\n    // Commands list history for debug\n    addCommand(payload: CommandItem) {\n      setCommandsList(c => ([payload, ...c].slice(0, 100)))\n    }\n\n    // Responses list history for debug\n    addResponse(payload: ResponsItem) {\n      setResponsesList(c => ([payload, ...c].slice(0, 100)))\n\n      console.error('- '.repeat(30))\n      console.error('RESPONSE:', payload)\n    }\n\n    updateConfig(playerConfig: PlayerConfigProps) {\n      this.dispatch({ playerConfig })\n    }\n\n    setMuted(muted: boolean) {\n      this.dispatchPsConfig({ startMuted: muted })\n    }\n\n  }\n\n  return cls\n}\n\nexport interface ActionProps {\n  state: StateProps,\n  commandsList: CommandItem[]\n  responsesList: ResponsItem[]\n  streamApp: IApplication | null\n  setRefStream: (app: IApplication) => void\n  isStreamActive: boolean\n  isWebrtcConnected: boolean\n  isWebrtcError: boolean\n  isStreamError: boolean\n  setWebrtcStatus: (status: WebrtcStatus, message?: string | boolean) => void\n  setStreamStatus: (status: StreamStatus, message?: string | boolean) => void\n  setFreezeFrame: (freezeFrame: boolean) => void\n  addCommand: (payload: CommandItem) => void\n  addResponse: (payload: ResponsItem) => void\n  updateConfig: (config: PlayerConfigProps) => void\n  setMuted: (muted: boolean) => void\n}\n\nexport default actions\n",
    "import * as React from 'react'\n\n// libs\nimport { JSONTree } from 'react-json-tree';\n\ninterface Props {\n  data: any;\n  expanded?: boolean\n}\n\nconst JsonView = (props: Props) => (\n  <JSONTree\n    invertTheme={false}\n    shouldExpandNodeInitially={() => props.expanded ? true : false}\n    theme={{\n      extend: theme,\n      // underline keys for literal values\n      valueLabel: {\n        // textDecoration: 'underline',\n      },\n    }}\n    data={props.data} />\n);\n\nconst theme = {\n  scheme: 'monokai',\n  author: 'wimer hazenberg (http://www.monokai.nl)',\n  // base00: 'var(--rs-bg-overlay)',\n  base00: 'transparent',\n  base01: '#383830',\n  base02: '#49483e',\n  base03: '#75715e',\n  base04: '#a59f85',\n  base05: '#f8f8f2',\n  base06: '#f5f4f1',\n  base07: '#f9f8f5',\n  base08: '#f92672',\n  base09: '#fd971f',\n  base0A: '#f4bf75',\n  base0B: '#a6e22e',\n  base0C: '#a1efe4',\n  base0D: '#66d9ef',\n  base0E: '#ae81ff',\n  base0F: '#cc6633',\n};\n\nexport default JsonView",
    "// types\nimport { ToasterOptions } from './types'\n\n// context\nimport { useStreamContext } from '../../context'\n\n// hooks\nimport useSave from './useSave'\n\n\ndeclare global {\n  interface Window {\n    [key: string]: any\n  }\n}\n\n\nexport default function useStreamActions() {\n\n  // context\n  const streamContext = useStreamContext()\n\n  // hooks\n  const save = useSave()\n\n  const cls = new class {\n\n    get nodeVideo() {\n      return <HTMLVideoElement>document.getElementById('streamingVideo')\n    }\n\n    play() {\n      window.player.stream?.play()\n    }\n\n    reconnect() {\n      window.player.stream?.reconnect()\n    }\n\n    disconnect() {\n      window.player.stream?.disconnect()\n    }\n\n    emitUi(payload: object, options?: ToasterOptions) {\n      save.add('ui', payload, options)\n\n      if (!streamContext.isStreamActive) {\n        console.error('Stream is not active. Can not emit UI interaction.')\n        return\n      }\n\n      if (window.metaeditor) {\n        window.metaeditor.emitUIInteraction(payload)\n      }\n    }\n\n    emitSys(payload: object, options?: ToasterOptions) {\n      save.add('sys', payload, options)\n\n      if (!streamContext.isStreamActive) {\n        console.error('Stream is not active. Can not emit system command.')\n        return\n      }\n\n      if (window.metaeditor) {\n        window.metaeditor.emitCommand(payload)\n      }\n    }\n\n    resetResolution() {\n      const width = window.innerWidth || document.documentElement.clientWidth\n        || document.body.clientWidth;\n      const height = window.innerHeight || document.documentElement.clientHeight\n        || document.body.clientHeight;\n\n      const payload = ({ 'Resolution.Width': width, 'Resolution.Height': height })\n      this.emitSys(payload, { debug: false })\n    }\n\n    switchMuted() {\n      if (this.nodeVideo) {\n        const muted = !streamContext.state.playerConfig.psConfig.startMuted\n        this.nodeVideo.muted = muted\n        streamContext.setMuted(muted)\n      }\n    }\n  }\n\n  return cls\n\n}\n\n",
    "import * as React from 'react'\n\n// context\nimport { useStreamContext } from \"../../context\"\n\n// rsuite\nimport { useToaster } from 'rsuite'\n\n// libs\nimport moment from 'moment'\nimport uuid from 'short-uuid'\n\n// types\nimport { CommandItem } from '../../context/useStreamContext/types'\nimport { ToasterOptions } from './types'\n\n// rsuite\nimport { Notification } from 'rsuite'\n\n// components\nimport JsonView from '../../components/JsonView'\n\n\nexport default function useSave() {\n\n  // context\n  const streamContext = useStreamContext()\n\n  // hooks\n  const toaster = useToaster();\n\n  const cls = new class {\n    add(type: 'ui' | 'sys', payload: object, options?: ToasterOptions) {\n\n      // Save to context store\n      const newPayload: CommandItem = {\n        type,\n        uuid: uuid.generate(),\n        date: moment.utc().format(),\n        payload,\n      }\n\n      streamContext.addCommand(newPayload)\n\n      // Check if debug mode enabled or parament specified in emit\n      const showNotification = (() => {\n        const { debugMode } = streamContext.state.playerConfig\n        if (debugMode === 'off') {\n          return false\n        }\n\n        if (['on', 'commands'].includes(debugMode)) {\n          return options?.debug || true\n        }\n\n        return false\n\n      })()\n\n      if (showNotification) {\n        toaster.push((\n          <Notification type=\"success\" header=\"Command\" closable>\n            <JsonView data={newPayload} expanded />\n          </Notification>\n        ), {\n          placement: options?.placement || 'bottomEnd',\n          duration: options?.duration || 1000 * 2,\n        })\n      }\n    }\n  }\n\n  return cls\n}",
    "\n// context\nimport { useGlobalContext, useStreamContext } from \"../context\"\n\n// hooks\nimport useStreamActions from '../hooks.stream/useStreamActions'\n\n\nexport default function usePreloader() {\n\n  // context\n  const globalContext = useGlobalContext()\n  const streamContext = useStreamContext()\n\n  // hooks\n  const streamActions = useStreamActions()\n\n  const cls = new class {\n\n    get isWebrtcConnected() {\n      return streamContext.isWebrtcConnected\n    }\n\n    get webrtcErrorHeader() {\n      if (streamContext.isWebrtcError) {\n        return streamContext.state.webrtcMessage\n      }\n      return null\n    }\n\n    get connectionHeader() {\n      return streamContext.state.webrtcMessage || streamContext.state.webrtcStatus\n    }\n\n    connect() {\n      streamActions.reconnect()\n    }\n\n    hide() {\n      globalContext.hidePreloader()\n    }\n\n  }\n\n  return cls\n}",
    "import { useEffect, useRef } from 'react'\n\nexport default function useEventListener(element: any, eventName: string, handler: any) {\n  // Create a ref that stores handler\n  const savedHandler = useRef<any>(null);\n\n  // Update ref.current value if handler changes.\n  // This allows our effect below to always get latest handler ...\n  // ... without us needing to pass it in effect deps array ...\n  // ... and potentially cause effect to re-run every render.\n\n  useEffect(() => {\n    if (handler) {\n      savedHandler.current = handler;\n    }\n\n  }, [handler]);\n\n  useEffect(\n    () => {\n      // Make sure element supports addEventListener\n      // On\n      const isSupported = element && element.addEventListener;\n      if (!isSupported) return;\n      // Create event listener that calls handler function stored in ref\n      const eventListener = (event: any) => savedHandler.current(event);\n      // Add event listener\n      element.addEventListener(eventName, eventListener);\n      // Remove event listener on cleanup\n      return () => {\n        element.removeEventListener(eventName, eventListener);\n      };\n    },\n    [eventName, element] // Re-run if eventName or element changes\n  );\n}",
    "import * as React from 'react'\n\n// hooks\nimport useEventListener from '../hooks/useEventListener'\n\n// context\nimport { useStreamContext } from \"../context\"\n\n\nexport default function useStreamEvents() {\n\n  // context\n  const streamContext = useStreamContext()\n\n  const player = typeof window !== 'undefined' && window.player ? window.player : null\n  const stream = player?.stream\n\n  /***\n   * webRtc\n   */\n\n  useEventListener(stream, 'webRtcSdp', () => {\n    streamContext.setWebrtcStatus('connection', 'Connection negotiated')\n  })\n\n  useEventListener(stream, 'webRtcAutoConnect', () => {\n    streamContext.setWebrtcStatus('autoConnect', 'Auto Connecting Now')\n  })\n\n  useEventListener(stream, 'webRtcConnecting', () => {\n    streamContext.setWebrtcStatus('connecting', 'Starting connection to server, please wait')\n  })\n\n  useEventListener(stream, 'webRtcConnected', () => {\n    streamContext.setWebrtcStatus('connected', 'WebRTC connected, waiting for video')\n  })\n\n  useEventListener(stream, 'webRtcFailed', () => {\n    streamContext.setWebrtcStatus('failed', 'Unable to setup video')\n  })\n\n  useEventListener(stream, 'webRtcDisconnected',\n    ({ data: { eventString, showActionOrErrorOnDisconnect } }: { data: { eventString: string, showActionOrErrorOnDisconnect: boolean } }) => {\n      if (showActionOrErrorOnDisconnect == false) {\n        streamContext.setWebrtcStatus('disconnected', eventString)\n      } else {\n        streamContext.setWebrtcStatus('disconnectedRestart', eventString)\n      }\n    })\n\n  /***\n   * streamer\n   */\n\n  useEventListener(stream, 'videoInitialized', () => {\n    streamContext.setStreamStatus('initialized')\n  })\n\n  useEventListener(stream, 'streamLoading', () => {\n    streamContext.setStreamStatus('loading', 'Loading Stream')\n  })\n\n  useEventListener(stream, 'playStreamError',\n    ({ data: { message } }: { data: { message: string } }) => {\n      streamContext.setStreamStatus('error', message)\n    })\n\n  // Doesnt work for some reason\n  // useEventListener(stream, 'playStream', () => {\n  //   streamContext.setStreamStatus('play')\n  // })\n\n  useEventListener(stream?.videoElementParent, 'click', () => {\n    if (streamContext.state.webrtcStatus == 'connected') {\n      if (streamContext.state.streamStatus !== 'play') {\n        streamContext.setStreamStatus('play')\n      }\n    }\n  })\n\n  useEventListener(stream, 'playStreamRejected',\n    ({ data: { reason } }: { data: { reason: string } }) => {\n      streamContext.setStreamStatus('rejected', reason)\n    })\n\n  useEventListener(stream, 'loadFreezeFrame',\n    ({ data: { shouldShowPlayOverlay } }: { data: { shouldShowPlayOverlay: boolean } }) => {\n      streamContext.setFreezeFrame(shouldShowPlayOverlay)\n    })\n\n\n  // this.stream.addEventListener(\n  //   'statsReceived',\n  //   ({ data: { aggregatedStats } }) =>\n  //     this.onStatsReceived(aggregatedStats)\n  // );\n  // this.stream.addEventListener(\n  //   'latencyTestResult',\n  //   ({ data: { latencyTimings } }) =>\n  //     this.onLatencyTestResults(latencyTimings)\n  // );\n  // this.stream.addEventListener(\n  //   'streamerListMessage',\n  //   ({ data: { messageStreamerList, autoSelectedStreamerId } }) =>\n  //     this.handleStreamerListMessage(messageStreamerList, autoSelectedStreamerId)\n  // );\n  // this.stream.addEventListener(\n  //   'settingsChanged',\n  //   (event) => this.configUI.onSettingsChanged(event)\n  // );\n\n\n\n}",
    "import * as React from 'react'\n\n// context\nimport { useStreamContext } from \"../../context\"\n\n// rsuite\nimport { useToaster } from 'rsuite'\n\n// libs\nimport moment from 'moment'\n\n// types\nimport { ResponsItem } from '../../context/useStreamContext/types'\n\n// rsuite\nimport { Notification } from 'rsuite'\n\n// components\nimport JsonView from '../../components/JsonView'\n\n\nexport default function useResponseSave() {\n\n  // context\n  const streamContext = useStreamContext()\n\n  // hooks\n  const toaster = useToaster();\n\n  const cls = new class {\n\n    handler(data: object) {\n      this.add(data)\n\n      const event = new CustomEvent(\"ue_response\", {\n        detail: data\n      });\n\n      document.dispatchEvent(event);\n\n      // Example of how to use the event\n      // document.addEventListener('ue_response', ({ detail }: any) => {\n      //   console.log('new event', detail);\n      // });\n    }\n\n    add(payload: object) {\n\n      // Save to context store\n      const newPayload: ResponsItem = {\n        date: moment.utc().format(),\n        payload,\n      }\n\n      streamContext.addResponse(newPayload)\n\n      // Check if debug mode enabled or parament specified in emit\n      const showNotification = (() => {\n        const { debugMode } = streamContext.state.playerConfig\n        if (debugMode === 'off') {\n          return false\n        }\n\n        if (['on', 'responses'].includes(debugMode)) {\n          return true\n        }\n\n        return false\n\n      })()\n\n      if (showNotification) {\n        toaster.push((\n          <Notification type=\"info\" header=\"Response\" closable>\n            <JsonView data={newPayload} expanded />\n          </Notification>\n        ), {\n          placement: 'bottomEnd',\n          duration: 1000 * 3,\n        })\n      }\n    }\n  }\n\n  return cls\n}",
    "import * as React from 'react'\n\n// libs\nimport { createUseStyles } from \"react-jss\";\n\n// context\nimport { useGlobalContext } from \"../../context\"\n\n// hooks\nimport usePreloader from '../../hooks.player/usePreloader'\n\n// rsiute\nimport { Button } from 'rsuite';\nimport SpinnerIcon from '@rsuite/icons/legacy/Spinner';\nimport PlayOutlineIcon from '@rsuite/icons/PlayOutline';\n\n\nconst useStyles = createUseStyles({\n  rootDiv: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n\n    zIndex: 10,\n\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    pointerEvents: 'none',\n    padding: '3rem',\n    '& > *': {\n      pointerEvents: 'all'\n    }\n  },\n  webrtcError: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& > h5': {\n      textAlign: 'center',\n      marginBottom: '1rem',\n    }\n  },\n  preloader: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& > small': {\n      textAlign: 'center',\n      margin: '1rem 0 .5rem',\n      cursor: 'default',\n      opacity: .5,\n    }\n  }\n})\n\nconst Preloader = () => {\n\n  // styles\n  const styles = useStyles();\n\n  // hooks\n  const preloader = usePreloader()\n\n  if (preloader.isWebrtcConnected) {\n    return (\n      <PlayOutlineIcon\n        onClick={(event) => {\n          // event.preventDefault()\n          // event.stopPropagation()\n        }}\n        style={{\n          pointerEvents: 'none',\n          color: '#fff',\n          fontSize: '10em',\n          cursor: 'pointer',\n        }} />\n    )\n  }\n\n  return (\n    <div className={styles.preloader}>\n      <SpinnerIcon pulse style={{\n        color: '#fff',\n        fontSize: '3em'\n      }} />\n\n      <small>\n        {preloader.connectionHeader}\n      </small>\n    </div>\n  )\n}\n\nconst WebrtcError = () => {\n\n  // styles\n  const styles = useStyles();\n\n  // hooks\n  const preloader = usePreloader()\n\n  return (\n    <div className={styles.webrtcError}>\n      <h5>\n        {preloader.webrtcErrorHeader}\n      </h5>\n      <Button\n        onClick={preloader.connect}\n        appearance='ghost'>\n        Restart\n      </Button>\n    </div>\n  )\n}\n\nexport default function PreloaderDialog() {\n\n  // styles\n  const styles = useStyles();\n\n  // context\n  const globalContext = useGlobalContext()\n\n  // hooks\n  const preloader = usePreloader()\n\n  // render\n  if (!globalContext.state.showPreloader) return null\n  if (preloader.isWebrtcConnected) return null\n\n  return (\n    <div className={styles.rootDiv}>\n      {preloader.webrtcErrorHeader ? (\n        <WebrtcError />\n      ) : (\n        <Preloader />\n      )}\n    </div>\n  )\n}",
    "import { useEffect, useState } from 'react'\n\n// https://usehooks-ts.com/react-hook/use-media-query\n\nconst useMedia = () => {\n  const smUp = useMediaQuery('(min-width: 768px)')\n  const smDown = useMediaQuery('(max-width: 768px)')\n\n  return {\n    up: {\n      sm: smUp,\n    },\n    down: {\n      sm: smDown,\n    },\n  }\n}\n\nfunction useMediaQuery(query: string): boolean {\n  const getMatches = (query: string): boolean => {\n    // Prevents SSR issues\n    if (typeof window !== 'undefined') {\n      return window.matchMedia(query).matches\n    }\n    return false\n  }\n\n  const [matches, setMatches] = useState<boolean>(getMatches(query))\n\n  function handleChange() {\n    setMatches(getMatches(query))\n  }\n\n  useEffect(() => {\n    const matchMedia = window.matchMedia(query)\n\n    // Triggered at the first client-side load and if query changes\n    handleChange()\n\n    // Listen matchMedia\n    if (matchMedia.addListener) {\n      matchMedia.addListener(handleChange)\n    } else {\n      matchMedia.addEventListener('change', handleChange)\n    }\n\n    return () => {\n      if (matchMedia.removeListener) {\n        matchMedia.removeListener(handleChange)\n      } else {\n        matchMedia.removeEventListener('change', handleChange)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query])\n\n  return matches\n}\n\nexport default useMedia\n",
    "import * as React from 'react'\n\n// context\nimport { useGlobalContext } from '../../../context';\n\n// hooks\nimport useStreamActions from '../../../hooks.stream/useStreamActions';\nimport useMedia from '../../../hooks/useMedia'\n\n// configs\nimport project from '../../../configs/project';\n\n// rsuite\nimport { Navbar, Nav, Button } from 'rsuite';\nimport CheckRoundIcon from '@rsuite/icons/CheckRound';\n\n\nexport default function Appbar() {\n\n  // context\n  const globalContext = useGlobalContext()\n\n  // hooks\n  const media = useMedia()\n  const streamActions = useStreamActions()\n\n  // render\n  const isLicenseValid = globalContext.isLicenseValid\n\n  const toolsMenu = [\n    {\n      title: 'Restart stream',\n      onClick: () => {\n        streamActions.reconnect()\n      }\n    },\n    {\n      title: 'Close stream',\n      onClick: () => {\n        streamActions.disconnect()\n      }\n    },\n    {\n      title: 'Reset resolution',\n      onClick: () => {\n        streamActions.resetResolution()\n      }\n    },\n  ]\n\n  const helpMenu = (() => {\n    let res = [\n      {\n        title: 'Online Player',\n        href: project.urls.onlinePlayer,\n      },\n      {\n        title: 'Signaling Server',\n        href: project.urls.signalingServer\n      },\n      {\n        title: 'Documentation',\n        href: project.urls.docs\n      },\n      {\n        title: 'Support',\n        href: project.urls.support,\n      }\n    ]\n\n    if (media.down.sm && !isLicenseValid) {\n      res = [\n        {\n          title: project.name + ' Pro',\n          href: project.urls.buy,\n        },\n        ...res,\n      ]\n    }\n\n    return res\n  })()\n\n  return (\n    <Navbar appearance=\"subtle\">\n      <Navbar.Brand as=\"a\" href={project.urls.main} target=\"_blank\">\n        {project.name} {isLicenseValid && 'Pro'}\n      </Navbar.Brand>\n      <Nav onSelect={() => { }} activeKey={undefined}>\n\n        {/* <Nav.Item>Project</Nav.Item> */}\n\n        <Nav.Menu title=\"Tools\">\n          {toolsMenu.map((item, index) => {\n            return (\n              <Nav.Item key={index} onClick={item.onClick}>\n                {item.title}\n              </Nav.Item>\n            )\n          })}\n        </Nav.Menu>\n\n        <Nav.Menu title=\"Help\">\n          {helpMenu.map((item, index) => (\n            <Nav.Item key={index} as=\"a\" href={item.href} target=\"_blank\">\n              {item.title}\n            </Nav.Item>\n          ))}\n        </Nav.Menu>\n\n      </Nav>\n\n      {(media.up.sm && !isLicenseValid) && (\n        <Nav pullRight>\n          <Nav.Item as=\"a\" href={project.urls.buy} target=\"_blank\">\n            <Button color=\"green\" appearance=\"primary\" startIcon={<CheckRoundIcon />}>\n              Buy Pro\n            </Button>\n          </Nav.Item>\n        </Nav>\n      )}\n    </Navbar>\n\n  )\n}",
    "/**\n * Usage\n * \n * \nimport CustomDrawer from 'src/components/Drawer';\n\ninterface Props {}\nconst DrawerMenu = React.forwardRef((props: Props, ref: any) => {\n\n  const refDrawer = React.useRef<any>(null);\n\n  React.useImperativeHandle(ref, () => ({\n    open: () => {\n      refDrawer?.current.open()\n    },\n    close: () => {\n      refDrawer?.current.close()\n    }\n  }))\n\n  return (\n    <CustomDrawer\n      contentPadding={0}\n      placement='left'\n      title=\"Drawer\"\n      ref={refDrawer}>\n      <div style={{\n        height: '100%'\n      }}>\n        Content\n      </div>\n    </CustomDrawer>\n  );\n})\n */\n\nimport * as React from 'react';\nimport { useState } from 'react';\n\n// rsuite\nimport { Drawer, DrawerProps } from 'rsuite';\n\n// hooks\nimport useMedia from '../../hooks/useMedia';\n\n\ninterface Props extends DrawerProps {\n  title: string\n  children: React.ReactNode\n  // placement?: 'left' | 'right' | 'top' | 'bottom'\n  // size?: 'xs' | 'sm' | 'md' | 'lg' | 'full'\n  contentPadding?: number\n  onClose?: () => void\n}\n\nconst CustomDrawer = React.forwardRef(({ title, children, contentPadding, onClose, ...props }: Props, ref: any) => {\n\n  const media = useMedia()\n\n  const [open, setOpen] = useState(false);\n\n  /**\n   * The component instance will be extended\n   * with whatever you return from the callback passed\n   * as the second argument\n   */\n  React.useImperativeHandle(ref, () => ({\n    open: () => {\n      setOpen(true)\n    },\n    close: () => {\n      setOpen(false)\n    }\n  }))\n\n  // Render\n  const drawerSize = media.up.sm ? props.size || 'xs' : 'full'\n\n  return (\n    <>\n      {/* <Button onClick={() => setOpenWithHeader(true)}>Open with header</Button> */}\n\n      <Drawer\n        {...props}\n        size={drawerSize}\n        open={open}\n        onClose={() => {\n          setOpen(false)\n          if (onClose) {\n            onClose()\n          }\n        }}>\n        <Drawer.Header>\n          <Drawer.Title>\n            {title}\n          </Drawer.Title>\n          {/* <Drawer.Actions>\n            <Button onClick={() => setOpenWithHeader(false)}>Cancel</Button>\n            <Button onClick={() => setOpenWithHeader(false)} appearance=\"primary\">\n              Confirm\n            </Button>\n          </Drawer.Actions> */}\n        </Drawer.Header>\n        <Drawer.Body style={{ padding: contentPadding }}>\n          {open && children}\n        </Drawer.Body>\n      </Drawer>\n    </>\n  );\n});\n\n\nexport default CustomDrawer;",
    "import * as React from 'react'\n\n// context\nimport { useStreamContext } from '../../../context';\n\n// hooks\nimport useStreamActions from '../../../hooks.stream/useStreamActions'\nimport useResponseSave from '../../../hooks.stream/useStreamResponses/useResponseSave'\n\n// rsuite\nimport { Button, Divider, Stack } from 'rsuite';\n\n// components\nimport JsonView from '../../../components/JsonView';\n\n\nexport default function DrawerContainer() {\n\n  // context\n  const streamContext = useStreamContext()\n\n  // hooks\n  const streamActions = useStreamActions()\n  const responseSave = useResponseSave()\n\n  return (\n    <>\n\n      <div>\n\n        <h6>Current config</h6>\n        <JsonView data={streamContext.state} expanded />\n\n        <Divider />\n\n        <h6>Commands history</h6>\n        <JsonView data={streamContext.commandsList} />\n\n        <Divider />\n\n        <h6>Responses history</h6>\n        <JsonView data={streamContext.responsesList} />\n\n        <Divider />\n\n        {/* <Button\n          onClick={() => {\n            streamActions.emitUi({ test: 'demo' })\n          }}>\n          Send data\n        </Button> */}\n\n        <Stack direction='column' spacing={5} alignItems='flex-start'>\n          <Button\n            onClick={() => streamActions.resetResolution()}>\n            Reset resolution\n          </Button>\n\n          <Button\n            onClick={() => {\n              responseSave.handler({ demo: true })\n            }}>\n            Test response\n          </Button>\n        </Stack>\n      </div>\n    </>\n  )\n}",
    "\nimport * as React from 'react'\n\n// components\nimport CustomDrawer from '../../../components/Drawer';\n\n// blocks\nimport DrawerContainer from './Container'\n\ninterface Props { }\nconst DrawerInfo = React.forwardRef((props: Props, ref: any) => {\n\n  const refDrawer = React.useRef<any>(null);\n\n  React.useImperativeHandle(ref, () => ({\n    open: () => {\n      refDrawer?.current.open()\n    },\n    close: () => {\n      refDrawer?.current.close()\n    }\n  }))\n\n  return (\n    <CustomDrawer\n      backdrop\n      contentPadding={20}\n      placement='right'\n      title=\"Tools Panel\"\n      ref={refDrawer}>\n      <div style={{\n        height: '100%'\n      }}>\n        <DrawerContainer />\n      </div>\n    </CustomDrawer>\n  );\n})\n\nexport default DrawerInfo\n",
    "import * as React from 'react'\n\n// snippets\nimport DrawerInfo from '../Drawers/DrawerInfo'\n\n// rsuite\nimport ToolsIcon from '@rsuite/icons/Tools';\n\n\nexport default function UiButton() {\n\n  // refs\n  const refDrawerInfo = React.useRef(null)\n\n  return (\n    <>\n      <DrawerInfo ref={refDrawerInfo} />\n\n      <button onClick={() => refDrawerInfo.current.open()}>\n        <ToolsIcon style={{\n          fontSize: 24,\n          lineHeight: 0,\n        }} />\n      </button>\n    </>\n\n  )\n}",
    "import * as React from 'react'\n\n// configs\nimport project from '../../configs/project';\n\n// context\nimport { useGlobalContext } from '../../context';\n\n// libs\nimport { createUseStyles } from \"react-jss\";\n\n\n\nconst useStyles = createUseStyles({\n  message: {\n    cursor: 'pointer',\n    backgroundColor: 'var(--rs-message-warning-bg)',\n    color: 'var(--rs-message-warning-text)',\n    padding: '.3rem 1rem',\n    transition: 'background-color .1s linear',\n\n    '&:hover': {\n      backgroundColor: 'var(--rs-orange-800)',\n    }\n  },\n})\n\n\nexport default function PackageUpdate() {\n\n  // context\n  const globalContext = useGlobalContext()\n\n  // styles\n  const styles = useStyles();\n\n  // render\n  const pkg = globalContext.state.packageVersion\n  const needUpdate = pkg.needUpdate\n\n  if (!needUpdate) return null\n\n  return (\n    <div className={styles.message} onClick={() => {\n      window.open(project.package.npmUrl)\n    }}>\n      Update {project.name} from version {pkg.current} to {pkg.latest}\n    </div>\n  )\n}",
    "import * as React from 'react'\n\n// libs\nimport { createUseStyles } from \"react-jss\";\nimport { Portal } from 'react-portal';\n\n// hooks\nimport useResizeObserver from \"use-resize-observer\";\n\n// blocks\nimport Appbar from './Appbar'\nimport UiButton from './UiButton'\nimport PackageUpdate from './PackageUpdate'\n\n\nconst useStyles = createUseStyles({\n  appbar: {\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    left: 0,\n    zIndex: 20,\n    backgroundColor: '#000',\n  },\n})\n\n\ninterface Props {\n  show: boolean\n}\n\nexport default function Toolbar({ show }: Props) {\n\n  // styles\n  const styles = useStyles();\n\n  // refs\n  const { ref, width, height } = useResizeObserver<HTMLDivElement>({\n    box: \"border-box\",\n  });\n\n\n  React.useEffect(() => {\n    if (!height) return\n\n    const doc = document.documentElement\n    doc.style.setProperty(\"--appbar-height\", `${height}px`);\n\n    const el = document.getElementById('controls')\n    const controlsHeight = el.clientHeight\n\n    if (el) {\n      el.style.top = `${height}px`\n      const elConnection = document.getElementById('connection')\n\n      if (elConnection) {\n        elConnection.style.top = `${height + controlsHeight + 20}px`\n        elConnection.style.bottom = 'auto'\n        elConnection.style.left = '2%'\n      }\n    }\n\n  }, [height])\n\n  /***\n   * dom\n   */\n  const nodeUiFeatures = typeof document !== 'undefined' && document.getElementById(\"uiFeatures\")\n  const nodePlayerUI = typeof document !== 'undefined' && document.getElementById('playerUI')\n  const nodeControls = typeof document !== 'undefined' && document.getElementById('controls')\n\n  /***\n   * Show/hide ui features\n   */\n  React.useEffect(() => {\n    if (nodeUiFeatures) {\n      nodeUiFeatures.style.visibility = show ? 'visible' : 'hidden'\n    }\n  }, [show, nodeUiFeatures])\n\n\n  // render\n  if (!show) return null\n  if (!nodePlayerUI) return null\n\n  return (\n    <>\n      <Portal node={nodePlayerUI}>\n        <div className={styles.appbar} ref={ref}>\n          <PackageUpdate />\n          <Appbar />\n        </div>\n      </Portal>\n\n      <Portal node={nodeControls}>\n        <UiButton />\n      </Portal>\n    </>\n  )\n}",
    "import * as React from 'react'\n\n// libs\nimport { createUseStyles } from \"react-jss\";\n\n\nconst useStyles = createUseStyles({\n  containerRoot: {\n    position: 'fixed',\n    // top: 'var(--appbar-height)',\n    top: 0,\n    right: 0,\n    left: 0,\n    bottom: 0,\n    height: 'var(--window-height)',\n    padding: 0,\n    paddingTop: 0,\n    pointerEvents: 'none',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    '& > div': {\n      // flex: 1,\n      '& > *': {\n        pointerEvents: 'all'\n      }\n    }\n  }\n})\n\ninterface Props {\n  children: React.ReactElement\n}\n\nexport default function Container({ children }: Props) {\n\n  // styles\n  const styles = useStyles();\n\n  return (\n    <div className={styles.containerRoot}>\n      <div>\n        {children}\n      </div>\n    </div>\n  )\n}",
    "import * as React from 'react';\n\n// libs\nimport { createUseStyles } from \"react-jss\";\n\n// context\nimport { useGlobalContext, useStreamContext } from '../../context';\n\n// ps\nimport { Config, PixelStreaming, Logger } from 'metaeditor4-ue-auraml';\nimport { Application } from 'metaeditor4-ui';\nimport { PixelStreamingApplicationStyle } from 'metaeditor4-ui';\nexport const PixelStreamingApplicationStyles = new PixelStreamingApplicationStyle();\nPixelStreamingApplicationStyles.applyStyleSheet();\n\n// hooks\nimport useWindowSize from '../../hooks/useWindowSize'\nimport useStreamEvents from '../../hooks.stream/useStreamEvents'\nimport useStreamResponses from '../../hooks.stream/useStreamResponses'\nimport useWatermark from '../../hooks.player/useWatermark'\n\n// blocks\nimport Pleloader from './Preloader'\n\n// snippets\nimport Toolbar from '../Toolbar'\nimport Container from '../Container';\n\n// types\nimport { PlayerConfigProps } from './types'\nimport { IApplication } from '../../globalTypes'\n\n\nconst useStyles = createUseStyles({\n  '@global': {\n    'body': {\n      width: '100vw',\n      height: 'var(--window-height)',\n      minHeight: '-webkit-fill-available',\n      overflow: 'hidden',\n    },\n    '#playOverlay': {\n      display: 'none',\n    },\n    '#infoOverlay': {\n      display: 'none',\n    },\n    '#disconnectOverlay': {\n      display: 'none',\n    },\n    \"#errorOverlay\": {\n      display: 'none',\n    },\n    // '#controls': {\n    // },\n    '#uiFeatures': {\n      visibility: 'hidden',\n    },\n\n    // dom clicks\n    '[data-click=\"true\"]': {\n      pointerEvents: 'all',\n    },\n    '[data-click=\"false\"]': {\n      pointerEvents: 'none',\n    },\n  },\n\n  rootDiv: {\n    zIndex: 0,\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    left: 0,\n    bottom: 0,\n    width: '100vw',\n    height: 'var(--window-height)',\n    overflow: 'hidden',\n    userSelect: 'none',\n  },\n})\n\ntype Props = {};\n\nconst PlayerComponent = React.forwardRef<Props, PlayerConfigProps>(({ children, ...props }, ref) => {\n\n  const {\n    showToolbar,\n    psHost,\n  } = props\n\n  // context\n  const globalContext = useGlobalContext()\n  const streamContext = useStreamContext()\n\n  // styles\n  const styles = useStyles();\n\n  // refs\n  const refRoot = React.useRef<any>(null)\n\n  // states\n  const [isReady, setIsReady] = React.useState(false)\n\n  // hooks\n  useWindowSize()\n  useStreamEvents()\n  useStreamResponses()\n  useWatermark()\n\n  /**\n   * Update config\n   */\n  // const cfg = {\n  //   debugMode: props.debugMode,\n  //   showToolbar: props.showToolbar,\n  //   psHost: props.psHost,\n  //   psConfig: props.psConfig,\n  // }\n  // React.useEffect(() => streamContext.updateConfig(cfg), [cfg])\n\n  React.useEffect(() => {\n\n    // Example of how to set the logger level\n    Logger.SetLoggerVerbosity(0);\n\n    // Check if already initialized\n    if (isReady) return\n    setIsReady(true)\n\n    // Check npm version\n    if (props.showToolbar) {\n      globalContext.checkVersion()\n    }\n\n    init()\n\n  }, [])\n\n\n  const init = () => {\n\n    // Update config\n    streamContext.updateConfig(props)\n\n    const initialSettings = {\n      AutoPlayVideo: false || props.psConfig.autoPlay,\n      AutoConnect: true || props.psConfig.autoConnect,\n      ss: psHost,\n      StartVideoMuted: true || props.psConfig.startMuted,\n      HoveringMouse: true || props.psConfig.hoveringMouse,\n      FakeMouseWithTouches: true || props.psConfig.fakeMouseWithTouches,\n      MatchViewportRes: true || props.psConfig.matchViewportRes,\n    }\n\n    // Create a config object\n    const config = new Config({\n      useUrlParams: true,\n      initialSettings,\n    });\n\n    // Create a Native DOM delegate instance that implements the Delegate interface class\n    const stream = new PixelStreaming(config);\n    const application: IApplication = new Application({ stream });\n\n    if (refRoot.current && !refRoot.current.textContent) {\n\n      // set access to internal methods\n      streamContext.setRefStream(application)\n      window.player = application\n\n      refRoot.current!.appendChild(application.rootElement)\n\n      if (typeof props.onLoad === 'function') {\n        props.onLoad()\n      }\n    }\n\n  }\n\n  React.useImperativeHandle(ref, () => ({\n    init,\n  }))\n\n  return (\n    <div>\n\n      <Pleloader />\n\n      <Toolbar show={showToolbar} />\n      <div ref={refRoot} className={styles.rootDiv} />\n      {children ? (<Container>{children}</Container>) : ''}\n    </div>\n  );\n})\n\n\nexport default PlayerComponent",
    "/* Usage\n\n// hooks\nimport useWindowSize from 'src/hooks/useWindowSize'\n\nfunction App() {\n  const windowSize = useWindowSize();\n\n  return (\n    <div>\n      {windowSize.width}px / {windowSize.height}px\n    </div>\n  );\n}\n*/\n\nimport {\n  useState,\n  useEffect\n} from 'react';\n\n// Hook\nexport default function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<{\n    width: number\n    height: number\n  }>({\n    width: 0,\n    height: 0,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n\n      // Set for css\n      const doc = document.documentElement\n      doc.style.setProperty(\"--window-width\", window.innerWidth + 'px');\n      doc.style.setProperty(\"--window-height\", window.innerHeight + 'px');\n\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  const { width, height } = windowSize\n  return { width, height }\n}\n",
    "import * as React from 'react'\n\n// hooks\nimport useResponseSave from './useResponseSave'\n\nexport default function useStreamResponses() {\n\n  // hooks\n  const responseSave = useResponseSave()\n\n  React.useEffect(() => {\n\n    if (window?.metaeditor) {\n      window.metaeditor.emitResponse.addResponseEventListener('handle_responses', responseSave.handler)\n    }\n\n    return () => {\n\n      if (window?.metaeditor) {\n        window.metaeditor.emitResponse.removeResponseEventListener('handle_responses')\n      }\n\n    }\n  }, [window?.metaeditor])\n\n}",
    "\nimport * as React from 'react'\n\n// context\nimport { useGlobalContext, useStreamContext } from '../context';\n\n// configs\nimport watermark from '../configs/utils/watermark'\n\n\nexport default function useWatermark() {\n\n  // context\n  const globalContext = useGlobalContext()\n  const streamContext = useStreamContext()\n\n  const licenseData = globalContext.state.licenseData\n  const configLoaded = streamContext.state.playerConfig ? true : false\n\n  React.useEffect(() => {\n\n    return () => {\n      watermark.stop()\n    }\n  }, [])\n\n  React.useEffect(() => {\n\n    if (globalContext.isLicenseActivated) {\n      watermark.stop()\n    } else {\n      watermark.start()\n    }\n\n  }, [licenseData])\n\n  React.useEffect(() => {\n    if (configLoaded) {\n      globalContext.checkApiKey()\n    }\n  }, [configLoaded])\n\n}",
    "import * as React from 'react';\n\n// rsuite\nimport { CustomProvider } from 'rsuite';\n\n// types\nimport { PlayerConfigProps } from './types'\n\n// blocks\nimport PlayerComponent from './PlayerComponent'\n\ntype Props = {};\n\nconst RootComponent = React.forwardRef<Props, PlayerConfigProps>((props, ref) => {\n\n  // states\n  const [mounted, setMounted] = React.useState(false)\n\n  React.useEffect(() => {\n    setMounted(true)\n  }, [])\n\n  if (!mounted) return null\n\n  return (\n    <CustomProvider theme=\"dark\">\n      <PlayerComponent {...props} ref={ref} />\n    </CustomProvider>\n  );\n\n})\n\nexport default RootComponent",
    "\n// context\nimport ContextProvider, { useGlobalContext, useStreamContext } from './context'\n\n// types\nimport './globalTypes'\nimport type { IApplication } from './globalTypes'\n\n// hooks\nimport usePreloader from './hooks.player/usePreloader'\nimport useStreamActions from './hooks.stream/useStreamActions'\nimport useStreamEvents from './hooks.stream/useStreamEvents'\nimport useEventListener from './hooks/useEventListener'\n\n// snippets\nimport Player from './snippets/Player'\n\n\n// ********** EXPORTS **********\nconst Context = {\n  global: useGlobalContext,\n  stream: useStreamContext,\n}\n\nconst Hooks = {\n  actions: useStreamActions,\n  events: useStreamEvents,\n  listener: useEventListener,\n  preloader: usePreloader,\n}\n\nexport {\n  ContextProvider as MetaProvider,\n  Player as MetaEditor,\n  Context,\n  Hooks,\n}\n\n// types\nimport type { PlayerConfigProps } from './snippets/Player/types'\n\nexport type {\n  PlayerConfigProps,\n  IApplication,\n}",
    "/* Usage\n\n***** wrapper\n// Context\nimport ContextProvider from 'src/@core/context';\n\nreturn (\n  <ContextProvider>\n    {children...}\n  </ContextProvider>\n)\n\n***** injection\n// context\nimport { useGlobalContext } from 'src/context';\n\nconst globalContext = useGlobalContext() //as IGlobalProps\n\n*/\n\nimport React from 'react'\n\nimport GlobalProvider, { useGlobalContext } from './useGlobalContext'\nimport StreamContext, { useStreamContext } from './useStreamContext'\n\nfunction ContextProvider(props: any) {\n  return (\n    <GlobalProvider>\n      <StreamContext>\n        {props.children}\n      </StreamContext>\n    </GlobalProvider>\n  )\n}\n\nexport { useGlobalContext, useStreamContext }\nexport default ContextProvider\n"
  ],
  "names": [
    "Reducer",
    "state",
    "action",
    "type",
    "payload",
    "initialState",
    "packageVersion",
    "latest",
    "current",
    "needUpdate",
    "showPreloader",
    "licenseData",
    "project",
    "isDev",
    "process",
    "apiHost",
    "name",
    "package",
    "version",
    "npmUrl",
    "license",
    "excludes",
    "checkUrl",
    "urls",
    "main",
    "docs",
    "support",
    "buy",
    "signalingServer",
    "onlinePlayer",
    "checkPackageVersion",
    "_checkPackageVersion",
    "url",
    "_context",
    "Promise",
    "resolve",
    "reject",
    "fetch",
    "then",
    "res",
    "json",
    "semver",
    "gt",
    "err",
    "console",
    "error",
    "checkLicenseKey",
    "_checkLicenseKey",
    "host",
    "window",
    "location",
    "hostname",
    "includes",
    "is_exclusion",
    "is_valid",
    "method",
    "headers",
    "Accept",
    "Content-Type",
    "body",
    "JSON",
    "stringify",
    "Context",
    "React",
    "useGlobalContext",
    "Provider",
    "props",
    "dispatch",
    "_proto",
    "checkVersion",
    "this",
    "checkApiKey",
    "_context2",
    "hidePreloader",
    "_createClass",
    "key",
    "get",
    "_state$licenseData",
    "_state$licenseData2",
    "_state$licenseData3",
    "value",
    "children",
    "anValue",
    "playerConfig",
    "psConfig",
    "watermarkTimer",
    "webrtcStatus",
    "webrtcMessage",
    "streamStatus",
    "streamMessage",
    "freezeFrame",
    "useStreamContext",
    "commandsList",
    "setCommandsList",
    "responsesList",
    "setResponsesList",
    "refStreamApp",
    "dispatchPsConfig",
    "setRefStream",
    "app",
    "setWebrtcStatus",
    "status",
    "message",
    "setStreamStatus",
    "setFreezeFrame",
    "addCommand",
    "c",
    "slice",
    "addResponse",
    "repeat",
    "updateConfig",
    "setMuted",
    "muted",
    "startMuted",
    "JsonView",
    "JSONTree",
    "invertTheme",
    "shouldExpandNodeInitially",
    "expanded",
    "theme",
    "extend",
    "valueLabel",
    "data",
    "scheme",
    "author",
    "base00",
    "base01",
    "base02",
    "base03",
    "base04",
    "base05",
    "base06",
    "base07",
    "base08",
    "base09",
    "base0A",
    "base0B",
    "base0C",
    "base0D",
    "base0E",
    "base0F",
    "useStreamActions",
    "streamContext",
    "save",
    "toaster",
    "useToaster",
    "add",
    "options",
    "debugMode",
    "newPayload",
    "uuid",
    "generate",
    "date",
    "moment",
    "utc",
    "format",
    "push",
    "Notification",
    "header",
    "closable",
    "placement",
    "duration",
    "useSave",
    "play",
    "player",
    "stream",
    "_window$player$stream",
    "reconnect",
    "_window$player$stream2",
    "disconnect",
    "_window$player$stream3",
    "emitUi",
    "isStreamActive",
    "metaeditor",
    "emitUIInteraction",
    "emitSys",
    "emitCommand",
    "resetResolution",
    "width",
    "innerWidth",
    "document",
    "documentElement",
    "clientWidth",
    "height",
    "innerHeight",
    "clientHeight",
    "Resolution.Width",
    "Resolution.Height",
    "debug",
    "switchMuted",
    "nodeVideo",
    "getElementById",
    "usePreloader",
    "globalContext",
    "streamActions",
    "connect",
    "hide",
    "isWebrtcConnected",
    "isWebrtcError",
    "useEventListener",
    "element",
    "eventName",
    "handler",
    "savedHandler",
    "useRef",
    "useEffect",
    "addEventListener",
    "eventListener",
    "event",
    "removeEventListener",
    "useStreamEvents",
    "showActionOrErrorOnDisconnect",
    "eventString",
    "videoElementParent",
    "reason",
    "shouldShowPlayOverlay",
    "useResponseSave",
    "CustomEvent",
    "detail",
    "dispatchEvent",
    "watermark",
    "start",
    "clearInterval",
    "setInterval",
    "injector",
    "stop",
    "node",
    "_this$node",
    "remove",
    "dc",
    "createElement",
    "style",
    "opacity",
    "innerText",
    "onclick",
    "preventDefault",
    "stopPropagation",
    "open",
    "setAttribute",
    "appendChild",
    "evaluate",
    "XPathResult",
    "FIRST_ORDERED_NODE_TYPE",
    "singleNodeValue",
    "useStyles",
    "createUseStyles",
    "rootDiv",
    "position",
    "top",
    "left",
    "right",
    "bottom",
    "zIndex",
    "display",
    "flexDirection",
    "alignItems",
    "justifyContent",
    "pointerEvents",
    "padding",
    "& > *",
    "webrtcError",
    "& > h5",
    "textAlign",
    "marginBottom",
    "preloader",
    "& > small",
    "margin",
    "cursor",
    "Preloader",
    "styles",
    "PlayOutlineIcon",
    "onClick",
    "color",
    "fontSize",
    "className",
    "SpinnerIcon",
    "pulse",
    "connectionHeader",
    "WebrtcError",
    "webrtcErrorHeader",
    "Button",
    "appearance",
    "PreloaderDialog",
    "useMedia",
    "up",
    "sm",
    "useMediaQuery",
    "down",
    "query",
    "getMatches",
    "matchMedia",
    "matches",
    "useState",
    "setMatches",
    "handleChange",
    "addListener",
    "removeListener",
    "Appbar",
    "media",
    "isLicenseValid",
    "toolsMenu",
    "title",
    "helpMenu",
    "href",
    "Navbar",
    "Brand",
    "as",
    "target",
    "Nav",
    "onSelect",
    "activeKey",
    "undefined",
    "Menu",
    "map",
    "item",
    "index",
    "Item",
    "pullRight",
    "startIcon",
    "CheckRoundIcon",
    "CustomDrawer",
    "ref",
    "contentPadding",
    "onClose",
    "setOpen",
    "close",
    "Drawer",
    "size",
    "Header",
    "Title",
    "Body",
    "DrawerContainer",
    "responseSave",
    "Divider",
    "Stack",
    "direction",
    "spacing",
    "demo",
    "DrawerInfo",
    "refDrawer",
    "backdrop",
    "UiButton",
    "refDrawerInfo",
    "ToolsIcon",
    "lineHeight",
    "backgroundColor",
    "transition",
    "&:hover",
    "PackageUpdate",
    "pkg",
    "appbar",
    "Toolbar",
    "show",
    "useResizeObserver",
    "box",
    "setProperty",
    "el",
    "controlsHeight",
    "elConnection",
    "nodeUiFeatures",
    "nodePlayerUI",
    "nodeControls",
    "visibility",
    "Portal",
    "containerRoot",
    "paddingTop",
    "& > div",
    "Container",
    "PixelStreamingApplicationStyle",
    "applyStyleSheet",
    "@global",
    "minHeight",
    "overflow",
    "#playOverlay",
    "#infoOverlay",
    "#disconnectOverlay",
    "#errorOverlay",
    "#uiFeatures",
    "[data-click=\"true\"]",
    "[data-click=\"false\"]",
    "userSelect",
    "PlayerComponent",
    "setWindowSize",
    "showToolbar",
    "psHost",
    "refRoot",
    "isReady",
    "setIsReady",
    "handleResize",
    "doc",
    "_window",
    "emitResponse",
    "addResponseEventListener",
    "_window2",
    "removeResponseEventListener",
    "_window3",
    "configLoaded",
    "isLicenseActivated",
    "useWatermark",
    "Logger",
    "SetLoggerVerbosity",
    "init",
    "config",
    "Config",
    "useUrlParams",
    "initialSettings",
    "AutoPlayVideo",
    "autoPlay",
    "AutoConnect",
    "ss",
    "StartVideoMuted",
    "HoveringMouse",
    "FakeMouseWithTouches",
    "MatchViewportRes",
    "PixelStreaming",
    "application",
    "Application",
    "textContent",
    "rootElement",
    "onLoad",
    "Pleloader",
    "RootComponent",
    "mounted",
    "setMounted",
    "CustomProvider",
    "Hooks",
    "actions",
    "events",
    "listener",
    "global",
    "GlobalProvider",
    "StreamContext"
  ],
  "mappings": "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"
}
